/*L
  Copyright (c) 2006 SAIC, SAIC-F.

  Distributed under the OSI-approved BSD 3-Clause License.
  See http://ncip.github.com/rembrandt/LICENSE.txt for details.
L*/

CREATE TABLE ACC_CHR_POSITION
(
  ACCESSION_NUM  VARCHAR2(40),
  CHROMOSOME     VARCHAR2(40),
  ACC_START      VARCHAR2(40),
  ACC_END        VARCHAR2(40)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE AGENT_DIM
(
  AGENT_ID      NUMBER                          NOT NULL,
  AGENT_NAME    VARCHAR2(120),
  AGENT_TYPE    VARCHAR2(100),
  NSC_NUMBER    NUMBER,
  EVS_ID        VARCHAR2(50),
  LOAD_IN_DATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE AGE_GROUP_DX_DIM
(
  AGE_GROUP_DESC  VARCHAR2(50)                  NOT NULL,
  AGE_GROUP       VARCHAR2(20)                  NOT NULL,
  LOWERBOUND      NUMBER(3),
  UPPERBOUND      NUMBER(3)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE ARRAY_GENO_ABN_FACT
(
  CHROMOSOME             VARCHAR2(20),
  CHANNEL_RATIO          FLOAT(126),
  LOSS_GAIN              VARCHAR2(20),
  DATASET_ID             NUMBER,
  INSTITUTION_ID         NUMBER,
  AGA_ID                 NUMBER                 NOT NULL,
  CYTOBAND               VARCHAR2(50),
  DISEASE_TYPE_ID        NUMBER                 NOT NULL,
  COPYNO_PVAL            FLOAT(126),
  GENDER_CODE            VARCHAR2(1),
  COPY_NUMBER            FLOAT(126),
  EXP_PLATFORM_ID        NUMBER,
  TIMECOURSE_ID          NUMBER,
  BIOSPECIMEN_ID         NUMBER,
  SURVIVAL_LENGTH_RANGE  VARCHAR2(15),
  AGE_GROUP              VARCHAR2(20),
  TREATMENT_HISTORY_ID   NUMBER,
  AGENT_ID               NUMBER,
  DISEASE_HISTORY_ID     NUMBER,
  SNP_PROBESET_ID        NUMBER,
  SNP_PROBESET_NAME      VARCHAR2(200),
  LOH                    FLOAT(126),
  PHYSICAL_POSITION      NUMBER,
  DISEASE_TYPE           VARCHAR2(100),
  SAMPLE_ID              VARCHAR2(20),
  LOAD_IN_DATE           DATE,
  ACCESS_CODE            NUMBER,
  CALL                   VARCHAR2(10),
  INSTITUTION_NAME       VARCHAR2(100),
  SPECIMEN_NAME          VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE BIOSPECIMEN_DIM
(
  SAMPLE_ID       VARCHAR2(50)                  NOT NULL,
  SPECIMEN_NAME   VARCHAR2(100),
  SPECIMEN_DESC   VARCHAR2(255),
  BIOSPECIMEN_ID  NUMBER                        NOT NULL,
  PATIENT_DID     NUMBER,
  ORG_SAMPLE_ID   VARCHAR2(50),
  LOAD_IN_DATE    DATE,
  DATASET_ID      NUMBER,
  INSTITUTION_ID  NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CGAP2_GENE_ALIAS
(
  CLUSTER_NUMBER  NUMBER,
  GENE_UC         VARCHAR2(100),
  GENE            VARCHAR2(100),
  TYPE            CHAR(2),
  TAXON           CHAR(2)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CG_GA
(
  GENE_ALIAS  VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CLINICAL_EVALUATION
(
  CLINICAL_EVALUATION_ID  NUMBER                NOT NULL,
  PATIENT_DID             NUMBER,
  INSTITUTION_ID          NUMBER,
  DATASET_ID              NUMBER,
  TIME_POINT              VARCHAR2(30),
  FOLLOWUP_DATE           DATE,
  FOLLOWUP_MONTH          NUMBER,
  EVALUATION_DATE         DATE,
  DEEP_VIEN_THROMBOSIS    VARCHAR2(30),
  HOSP_FOR_INFECTION      VARCHAR2(10),
  HOSP_RELEASE_DATE       DATE,
  HOSP_COMMENT            VARCHAR2(200)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CLINICAL_MEASURE_CHANGE
(
  NEURO_EVAL_CHANGE_ID  NUMBER                  NOT NULL,
  PATIENT_DID           NUMBER,
  INSTITUTION_ID        NUMBER,
  DATASET_ID            NUMBER,
  TEST_NAME             VARCHAR2(50),
  INIT_TEST_RSLT        NUMBER,
  MEASURE_TIME_POINT    VARCHAR2(25),
  TEST_RSLT             NUMBER,
  TEST_CHANGE_RSLT      NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CLONE_ACCESSION
(
  CLONE_ID          NUMBER                      NOT NULL,
  ACCESSION_NUMBER  VARCHAR2(100),
  IMAGE_ID          VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CLONE_DIM
(
  CLONE_ID         NUMBER                       NOT NULL,
  CLONE_NAME       VARCHAR2(200),
  CLONE_DESC       VARCHAR2(4000),
  UTR              NUMBER(1),
  UNIGENE_LIBRARY  VARCHAR2(50),
  UNIGENE_ID       VARCHAR2(50),
  CLONE_TYPE       VARCHAR2(20),
  CYTOBAND         VARCHAR2(50),
  CHROMOSOME       VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_APPLICATION
(
  APPLICATION_ID           NUMBER(38)           NOT NULL,
  APPLICATION_NAME         VARCHAR2(100)        NOT NULL,
  APPLICATION_DESCRIPTION  VARCHAR2(200)        NOT NULL,
  DECLARATIVE_FLAG         NUMBER(1),
  ACTIVE_FLAG              NUMBER(1)            NOT NULL,
  UPDATE_DATE              DATE                 NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_GROUP
(
  GROUP_ID        NUMBER(38)                    NOT NULL,
  GROUP_NAME      VARCHAR2(100)                 NOT NULL,
  GROUP_DESC      VARCHAR2(200),
  UPDATE_DATE     DATE                          NOT NULL,
  APPLICATION_ID  NUMBER(38)                    NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_PG_PE
(
  PG_PE_ID               NUMBER(38)             NOT NULL,
  PROTECTION_GROUP_ID    NUMBER(38)             NOT NULL,
  PROTECTION_ELEMENT_ID  NUMBER(38)             NOT NULL,
  UPDATE_DATE            DATE                   NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_PRIVILEGE
(
  PRIVILEGE_ID           NUMBER(38)             NOT NULL,
  PRIVILEGE_NAME         VARCHAR2(100)          NOT NULL,
  PRIVILEGE_DESCRIPTION  VARCHAR2(200),
  UPDATE_DATE            DATE                   NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_PROTECTION_ELEMENT
(
  PROTECTION_ELEMENT_ID           NUMBER(38)    NOT NULL,
  PROTECTION_ELEMENT_NAME         VARCHAR2(100) NOT NULL,
  PROTECTION_ELEMENT_DESCRIPTION  VARCHAR2(200),
  OBJECT_ID                       VARCHAR2(100) NOT NULL,
  ATTRIBUTE                       VARCHAR2(100),
  PROTECTION_ELEMENT_TYPE_ID      NUMBER(10),
  APPLICATION_ID                  NUMBER(38)    NOT NULL,
  UPDATE_DATE                     DATE          NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_PROTECTION_GROUP
(
  PROTECTION_GROUP_ID           NUMBER(38)      NOT NULL,
  PROTECTION_GROUP_NAME         VARCHAR2(100)   NOT NULL,
  PROTECTION_GROUP_DESCRIPTION  VARCHAR2(200),
  APPLICATION_ID                NUMBER(38)      NOT NULL,
  LARGE_ELEMENT_COUNT_FLAG      NUMBER(1)       NOT NULL,
  UPDATE_DATE                   DATE            NOT NULL,
  PARENT_PROTECTION_GROUP_ID    NUMBER(38)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_ROLE
(
  ROLE_ID           NUMBER(38)                  NOT NULL,
  ROLE_NAME         VARCHAR2(100)               NOT NULL,
  ROLE_DESCRIPTION  VARCHAR2(200),
  APPLICATION_ID    NUMBER(38)                  NOT NULL,
  ACTIVE_FLAG       NUMBER(1)                   NOT NULL,
  UPDATE_DATE       DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_ROLE_PRIVILEGE
(
  ROLE_PRIVILEGE_ID  NUMBER(38)                 NOT NULL,
  ROLE_ID            NUMBER(38)                 NOT NULL,
  PRIVILEGE_ID       NUMBER(38)                 NOT NULL,
  UPDATE_DATE        DATE                       NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_USER
(
  USER_ID       NUMBER(38)                      NOT NULL,
  LOGIN_NAME    VARCHAR2(100)                   NOT NULL,
  FIRST_NAME    VARCHAR2(100)                   NOT NULL,
  LAST_NAME     VARCHAR2(100)                   NOT NULL,
  ORGANIZATION  VARCHAR2(100),
  DEPARTMENT    VARCHAR2(100),
  TITLE         VARCHAR2(100),
  PHONE_NUMBER  VARCHAR2(15),
  PASSWORD      VARCHAR2(100),
  EMAIL_ID      VARCHAR2(100),
  START_DATE    DATE,
  END_DATE      DATE,
  UPDATE_DATE   DATE                            NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_USER_GROUP
(
  USER_GROUP_ID  NUMBER(38)                     NOT NULL,
  USER_ID        NUMBER(38)                     NOT NULL,
  GROUP_ID       NUMBER(38)                     NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_USER_GROUP_ROLE_PG
(
  USER_GROUP_ROLE_PG_ID  NUMBER(38)             NOT NULL,
  USER_ID                NUMBER(38),
  GROUP_ID               NUMBER(38),
  ROLE_ID                NUMBER(38)             NOT NULL,
  PROTECTION_GROUP_ID    NUMBER(38)             NOT NULL,
  UPDATE_DATE            DATE                   NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CSM_USER_PE
(
  USER_PROTECTION_ELEMENT_ID  NUMBER(38)        NOT NULL,
  PROTECTION_ELEMENT_ID       NUMBER(38)        NOT NULL,
  USER_ID                     NUMBER(38)        NOT NULL,
  UPDATE_DATE                 DATE              NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE CYTOBAND_POSITION
(
  CHROMOSOME            VARCHAR2(10)            NOT NULL,
  CYTOBAND              VARCHAR2(50)            NOT NULL,
  ORGANISM              VARCHAR2(200),
  CB_START              NUMBER,
  CB_END_POS            NUMBER,
  CYTOBAND_POSITION_ID  NUMBER                  NOT NULL,
  CHR_CYTOBAND          VARCHAR2(60)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_CHEMO_STG
(
  PATIENTID                 VARCHAR2(20),
  PT_ACCESSION_NUM          NUMBER,
  TIMEPOINT                 VARCHAR2(40),
  INSTITUTION               VARCHAR2(40),
  FOLLOWUP_DATE             VARCHAR2(40),
  FOLLOWUP_MONTH            VARCHAR2(20),
  REGIMEN_NUM               NUMBER,
  CHEMO_REGIMEN_START_DATE  VARCHAR2(20),
  AGENT                     VARCHAR2(40),
  FIRST_DOSE_DATE           VARCHAR2(20),
  LAST_DOSE_DATE            VARCHAR2(20),
  NABTCTT_STUDY             VARCHAR2(10),
  STUDY_NUMBER              VARCHAR2(40),
  TREATMENT_RESPONSE        VARCHAR2(40),
  TREATMENT_RESPONSE_DATE   VARCHAR2(20),
  TREATMENT_RESP_COMMENTS   VARCHAR2(800),
  RECEIVE_CHEMO             VARCHAR2(10)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_CLIN_EVALUATION_STG
(
  PATIENTID               VARCHAR2(20),
  PT_ACCESSION_NUM        NUMBER,
  INSTITUTION             VARCHAR2(50),
  FOLLOWUP_DATE           VARCHAR2(20),
  FOLLOWUP_MONTH          VARCHAR2(20),
  EVALUATION_DATE         VARCHAR2(20),
  VEIN_THROMBOSIS_STATUS  VARCHAR2(20),
  HOSP_INFECTION          VARCHAR2(20),
  HOSP_RELEASE_DATE       VARCHAR2(20),
  HOSP_COMMENT            VARCHAR2(200)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_DEMO_STG
(
  PT_ACCESSION_NUM       NUMBER,
  PATIENTID              VARCHAR2(20),
  REG_DATE               VARCHAR2(20),
  BIRTH_DATE             VARCHAR2(20),
  AGE_AT_REGISTRATION    NUMBER,
  RACE                   VARCHAR2(30),
  ETHNICITY              VARCHAR2(30),
  GENDER                 VARCHAR2(30),
  KPS_SCORE              VARCHAR2(20),
  DEATH_DATE             VARCHAR2(20),
  INSTITUTION            VARCHAR2(50),
  REGISTERING_PHYSICIAN  VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_NEUROLOGIC_SYMPTOMS_STG
(
  PATIENTID             VARCHAR2(20),
  PT_ACCESSION_NUM      NUMBER,
  INSTITUTION           VARCHAR2(40),
  FOLLOWUP_DATE         VARCHAR2(20),
  FOLLOWUP_MONTH        VARCHAR2(20),
  SYMP_EVALUATION_DATE  VARCHAR2(20),
  SEIZURES              VARCHAR2(20),
  CEREBRAL_EDEMA        VARCHAR2(20),
  RADIATION_NECROSIS    VARCHAR2(20),
  CUSHINGOID_FEATURES   VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_NEURO_EVALUATION_STG
(
  PATIENTID               VARCHAR2(20),
  PT_ACCESSION_NUM        NUMBER,
  INSTITUTION             VARCHAR2(40),
  FOLLOWUP_DATE           VARCHAR2(20),
  FOLLOWUP_MONTH          VARCHAR2(20),
  NEURO_EVALUATION_DATE   VARCHAR2(20),
  KARNOFSKY_SCORE         VARCHAR2(20),
  LANSKY_SCORE            VARCHAR2(20),
  NEURO_EXAM              VARCHAR2(20),
  MRI_CT_SCORE            VARCHAR2(20),
  STEROID_DOSE_STATUS     VARCHAR2(20),
  ANTI_CONVULSANT_STATUS  VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_OFFSTUDY_STG
(
  PATIENTID           VARCHAR2(20),
  PT_ACCESSION_NUM    NUMBER,
  INSTITUTION         VARCHAR2(40),
  OFFSTUDY_DATE       VARCHAR2(20),
  FOLLOWUP_COMPLETED  VARCHAR2(20),
  DEATH_STATUS        VARCHAR2(20),
  REASON_OFFSTUDY     VARCHAR2(50),
  COMMENTS            VARCHAR2(200)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_RADIATION_STG
(
  PATIENTID                  VARCHAR2(20),
  PT_ACCESSION_NUM           NUMBER,
  TIMEPOINT                  VARCHAR2(40),
  INSTITUTION                VARCHAR2(40),
  FOLLOWUP_DATE              VARCHAR2(20),
  FOLLOWUP_MONTH             VARCHAR2(20),
  RADIATION_START_DATE       VARCHAR2(20),
  LOCATION                   VARCHAR2(40),
  FRACTIONS_DOSE             NUMBER,
  FRACTIONS_NUMBER           NUMBER,
  RADIATION_END_DATE         VARCHAR2(20),
  TYPE                       VARCHAR2(40),
  NECROSIS_POST_RADIATION    VARCHAR2(20),
  RECEIVE_RADIATION_THERAPY  VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_SURGERY_STG
(
  PATIENTID         VARCHAR2(20),
  PT_ACCESSION_NUM  NUMBER,
  TIMEPOINT         VARCHAR2(40),
  INSTITUTION       VARCHAR2(40),
  FOLLOWUP_DATE     VARCHAR2(20),
  FOLLOWUP_MONTH    VARCHAR2(20),
  PROCEDURE_DATE    VARCHAR2(20),
  PROCEDURE_TITLE   VARCHAR2(40),
  INDICATION        VARCHAR2(40),
  OTHER_INDICATION  VARCHAR2(40),
  POSTOP_DX         VARCHAR2(40),
  OTHER_POSTOP_DX   VARCHAR2(200),
  OUTCOME           VARCHAR2(40),
  CRANIAL_SURGERY   VARCHAR2(40)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_SURGERY_STGC
(
  PATIENTID         VARCHAR2(20),
  PT_ACCESSION_NUM  NUMBER,
  TIMEPOINT         VARCHAR2(40),
  INSTITUTION       VARCHAR2(40),
  FOLLOWUP_DATE     VARCHAR2(20),
  FOLLOWUP_MONTH    VARCHAR2(20),
  PROCEDURE_DATE    VARCHAR2(20),
  PROCEDURE_TITLE   VARCHAR2(40),
  INDICATION        VARCHAR2(40),
  OTHER_INDICATION  VARCHAR2(40),
  POSTOP_DX         VARCHAR2(40),
  OTHER_POSTOP_DX   VARCHAR2(200),
  OUTCOME           VARCHAR2(40),
  CRANIAL_SURGERY   VARCHAR2(40)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE C_TUMOR_HISTO_STG
(
  PT_ACCESSION_NUM         NUMBER,
  PATIENTID                VARCHAR2(20),
  INSTITUTION              VARCHAR2(50),
  REG_DATE                 VARCHAR2(20),
  TIMEPOINT                VARCHAR2(40),
  DIAGNOSIS_DATE           VARCHAR2(20),
  HISTOLOGY_PRIMARY        VARCHAR2(50),
  PROCEDURE_DATE           VARCHAR2(20),
  POST_OP_HISTO_DIAGNOSIS  VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE DETECTION_TYPE
(
  DETECTION_TYPE_ID    NUMBER                   NOT NULL,
  DETECTION_TYPE       VARCHAR2(100),
  DETECTION_TYPE_DESC  VARCHAR2(255)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE DIFFERENTIAL_EXPRESSION_SFACT
(
  DES_ID                NUMBER                  NOT NULL,
  PROBESET_ID           NUMBER,
  CLONE_ID              NUMBER,
  EXPRESSION_RATIO      FLOAT(126),
  SAMPLE_INTENSITY      FLOAT(126),
  NORMAL_INTENSITY      FLOAT(126),
  GENE_SYMBOL           VARCHAR2(50),
  DATASET_ID            NUMBER,
  EXP_PLATFORM_ID       NUMBER,
  INSTITUTION_ID        NUMBER,
  BIOSPECIMEN_ID        NUMBER                  NOT NULL,
  DISEASE_TYPE_ID       NUMBER                  NOT NULL,
  GENDER_CODE           VARCHAR2(1),
  AGE_GROUP             VARCHAR2(20),
  SURVIV_LENGTH_RANGE   VARCHAR2(15),
  TREATMENT_HISTORY_ID  NUMBER,
  AGENT_ID              NUMBER,
  DISEASE_HISTORY_ID    NUMBER,
  TIMECOURSE_ID         NUMBER,
  CLONE_NAME            VARCHAR2(200),
  PROBESET_NAME         VARCHAR2(200),
  CYTOBAND              VARCHAR2(500),
  DISEASE_TYPE          VARCHAR2(100),
  SAMPLE_ID             VARCHAR2(20),
  LOAD_IN_DATE          DATE,
  ACCESS_CODE           NUMBER,
  INSTITUTION_NAME      VARCHAR2(100),
  SPECIMEN_NAME         VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE DIFF_EXPRESSION_GENE_SFACT
(
  DEGS_ID               NUMBER                  NOT NULL,
  UNIFIED_GENE          VARCHAR2(200),
  EXPRESSION_RATIO      FLOAT(126),
  SAMPLE_INTENSITY      FLOAT(126),
  NORMAL_INTENSITY      FLOAT(126),
  DATASET_ID            NUMBER,
  EXP_PLATFORM_ID       NUMBER,
  INSTITUTION_ID        NUMBER,
  BIOSPECIMEN_ID        NUMBER,
  DISEASE_TYPE_ID       NUMBER,
  GENDER_CODE           VARCHAR2(1),
  AGE_GROUP             VARCHAR2(20),
  SURVIV_LENGTH_RANGE   VARCHAR2(15),
  TREATMENT_HISTORY_ID  NUMBER,
  AGENT_ID              NUMBER,
  DISEASE_HISTORY_ID    NUMBER,
  TIMECOURSE_ID         NUMBER,
  CYTOBAND              VARCHAR2(500),
  DISEASE_TYPE          VARCHAR2(100),
  SAMPLE_ID             VARCHAR2(20),
  LOAD_IN_DATE          DATE,
  ACCESS_CODE           NUMBER,
  METHOD_USED           VARCHAR2(10),
  GENE_SYMBOL           VARCHAR2(50),
  INSTITUTION_NAME      VARCHAR2(100),
  SPECIMEN_NAME         VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE DISEASE_GRADE
(
  GRADE_ID    NUMBER,
  GRADE       VARCHAR2(5),
  GRADE_DESC  VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE DISEASE_HISTORY_DIM
(
  DISEASE_HISTORY_ID      NUMBER                NOT NULL,
  OCCURRENCE_STATUS       VARCHAR2(10),
  OCCURRENCE_STATUS_DESC  VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE DISEASE_TYPE_DIM
(
  DISEASE_TYPE_ID  NUMBER                       NOT NULL,
  DISEASE_TYPE     VARCHAR2(100)                NOT NULL,
  DISEASE_DESC     VARCHAR2(200)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE EXP_PLATFORM_DIM
(
  EXP_PLATFORM_ID    NUMBER                     NOT NULL,
  EXP_PLATFORM_NAME  VARCHAR2(50),
  EXP_PLATFORM_DESC  VARCHAR2(200)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE FILE_SOURCE
(
  FILE_ID      NUMBER,
  FILE_NAME    VARCHAR2(50),
  FILE_PATH    VARCHAR2(200),
  FILE_TYPE    VARCHAR2(50),
  ACCESS_CODE  NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE GEEXP_PROBESET_SFSTG
(
  PROBESET_NAME     VARCHAR2(200),
  NORMAL_INTENSITY  FLOAT(126),
  SPECIMEN_NAME     VARCHAR2(50),
  SAMPLE_INTENSITY  FLOAT(126),
  EXP_RATIO         FLOAT(126)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE GENDER_DIM
(
  GENDER_CODE  VARCHAR2(1)                      NOT NULL,
  GENDER_DESC  VARCHAR2(30)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE GENE_CLONE
(
  GENE_CLONE_ID     NUMBER                      NOT NULL,
  UNIGENE_LIBRARY   VARCHAR2(50),
  GENE_TITLE        VARCHAR2(2000),
  UNIGENE_ID        VARCHAR2(50),
  LL_ID             VARCHAR2(50),
  EC                VARCHAR2(100),
  ACCESSION_NUMBER  VARCHAR2(100),
  ACC_START         NUMBER,
  ACC_END           NUMBER,
  CLONE_ID          NUMBER,
  GENE_SYMBOL       VARCHAR2(50),
  IMAGE_ID          VARCHAR2(50),
  OMIM_ID           VARCHAR2(50),
  CHROMOSOME        VARCHAR2(20),
  UP_GENE_SYMBOL    VARCHAR2(50),
  LOAD_IN_DATE      DATE
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE GENE_LL_ACC_SNP
(
  GENE_SYMBOL        VARCHAR2(100),
  ACCESSION          VARCHAR2(50),
  LL_ID              VARCHAR2(50),
  CHROMOSOME         VARCHAR2(100),
  UP_GENE_SYMBOL     VARCHAR2(50),
  SNP_PROBESET_ID    NUMBER                     NOT NULL,
  PROBESET_NAME      VARCHAR2(200),
  PHYSICAL_POSITION  NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE GENE_ONTOLOGY
(
  GO_NAME         VARCHAR2(200),
  GENE_SYMBOL     VARCHAR2(100),
  GO_DESC         VARCHAR2(4000),
  GO_ID           VARCHAR2(15),
  UP_GENE_SYMBOL  VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE GENE_ONTOLOGY_BAK
(
  GO_NAME         VARCHAR2(200),
  GENE_SYMBOL     VARCHAR2(100),
  GO_DESC         VARCHAR2(4000),
  GO_ID           VARCHAR2(15),
  UP_GENE_SYMBOL  VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE GENE_PATHWAY
(
  PATHWAY_NAME    VARCHAR2(200),
  DATA_SOURCE     VARCHAR2(30),
  GENE_SYMBOL     VARCHAR2(50),
  PATHWAY_DESC    VARCHAR2(4000),
  UP_GENE_SYMBOL  VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE GENE_SNP
(
  GENE_SYMBOL      VARCHAR2(100),
  PROBESET_NAME    VARCHAR2(200)                NOT NULL,
  UP_GENE_SYMBOL   VARCHAR2(50),
  SNP_PROBESET_ID  NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE GENO_ABN_TYPE
(
  GENO_ABN_TYPE_DESC  VARCHAR2(200),
  GENO_ABN_TYPE       VARCHAR2(20)              NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE HUGO_GA
(
  GENE_ALIAS  VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE HUGO_GENE_ALIAS
(
  APPROVED_SYMBOL  VARCHAR2(50),
  ALIAS            VARCHAR2(100),
  APPROVED_NAME    VARCHAR2(4000),
  COVERAGE         VARCHAR2(5),
  UP_SYMBOL        VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE INSTITUTION_DIM
(
  INSTITUTION_ID    NUMBER                      NOT NULL,
  INSTITUTION_NAME  VARCHAR2(100),
  INSTITUTION_DESC  VARCHAR2(200),
  ACCESS_CODE       NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE KARNOFSKY_SCORE
(
  KARNOFSKY_SCORE_ID    NUMBER                  NOT NULL,
  KARNOFSKY_SCORE       VARCHAR2(20),
  KARNOFSKY_SCORE_DESC  VARCHAR2(200),
  KARNOFSKY_SCORE_NUM   NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE LANSKY_SCORE
(
  LANSKY_SCORE_ID    NUMBER                     NOT NULL,
  LANSKY_SCORE       VARCHAR2(30),
  LANSKY_SCORE_DESC  VARCHAR2(200)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE LIST
(
  LIST_ID        NUMBER                         NOT NULL,
  NAME           VARCHAR2(50),
  TYPE           VARCHAR2(50),
  SUBTYPE        VARCHAR2(50),
  AUTHOR         VARCHAR2(50),
  INSTITUTION    VARCHAR2(50),
  CREATION_DATE  DATE,
  CATEGORY       VARCHAR2(50),
  DESCRIPTION    VARCHAR2(500),
  ORIGIN         VARCHAR2(50)                   NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE LIST_ITEM
(
  LIST_ID           NUMBER,
  ITEM_NAME         VARCHAR2(50),
  RANK              NUMBER,
  ITEM_DESCRIPTION  VARCHAR2(256),
  LIST_NAME         VARCHAR2(50),
  ITEM_ID           NUMBER                      NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE LL_SNP
(
  LL_ID            VARCHAR2(50),
  SNP_PROBESET_ID  NUMBER,
  PROBESET_NAME    VARCHAR2(200)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE LOCULINK_ACCESSION
(
  LL_ID  VARCHAR2(50),
  ACC    VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE LOSS_GAIN_CODE
(
  LOSS_GAIN_DESC  VARCHAR2(100),
  LOSS_GAIN       VARCHAR2(20)                  NOT NULL,
  GENE_ID         NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_ACCESSION_NUM
(
  PROBE_SET_ID              VARCHAR2(100),
  REPRESENTATIVE_PUBLIC_ID  VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_ALIGNMENTS
(
  PROBE_SET_ID    VARCHAR2(100),
  CHROMOSOME      VARCHAR2(20),
  START_POSITION  NUMBER,
  END_POSITION    NUMBER,
  DIRECTION       CHAR(1)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_CHR_LOCATION
(
  PROBE_SET_ID          VARCHAR2(100),
  CHROMOSOMAL_LOCATION  VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_EC
(
  PROBE_SET_ID  VARCHAR2(100),
  EC            VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_ENTREZ_GENE
(
  PROBE_SET_ID  VARCHAR2(100),
  ENTREZ_GENE   VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_GENE_SYMBOL
(
  PROBE_SET_ID  VARCHAR2(100),
  GENE_SYMBOL   VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_GENE_TITLE
(
  PROBE_SET_ID  VARCHAR2(100),
  GENE_TITLE    VARCHAR2(1000)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_OMIM
(
  PROBE_SET_ID  VARCHAR2(100),
  OMIM_ID       VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_PATHWAY
(
  PROBE_SET_ID  VARCHAR2(100),
  PATHWAY       VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_REFSEQPROTEIN
(
  PROBE_SET_ID       VARCHAR2(100),
  REFSEQ_PROTEIN_ID  VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_REFSEQTRANS
(
  PROBE_SET_ID           VARCHAR2(100),
  REFSEQ_TRANSCRIPTS_ID  VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_SWISSPROT
(
  PROBE_SET_ID  VARCHAR2(100),
  SWISSPROT_ID  VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE L_PROBESET_UNIGENEID
(
  PROBE_SET_ID  VARCHAR2(100),
  UNIGENE_ID    VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE MDX_STG
(
  PATIENTID          VARCHAR2(20),
  HISTOLOGY_PRIMARY  VARCHAR2(50),
  DIAGNOSIS_DATE     VARCHAR2(20),
  DISEASE_TYPE       VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE MEDICAL_HISTORY
(
  MEDICAL_HISTORY_ID  NUMBER                    NOT NULL,
  PATIENT_DID         NUMBER,
  INSTITUTION_ID      NUMBER,
  DATASET_ID          NUMBER,
  DIAGONISIS          VARCHAR2(200),
  DIAGONISIS_DATE     DATE
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE MRICT_SCORE
(
  MRICT_SCORE_ID    NUMBER                      NOT NULL,
  MRICT_SCORE       VARCHAR2(20),
  MRICT_SCORE_DESC  VARCHAR2(200),
  MRICT_SCORE_NUM   NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE NEUROLOGICAL_EVALUATION
(
  NEURO_EVALUATION_ID     NUMBER                NOT NULL,
  PATIENT_DID             NUMBER,
  INSTITUTION_ID          NUMBER,
  DATASET_ID              NUMBER,
  TIME_POINT              VARCHAR2(30),
  FOLLOWUP_DATE           DATE,
  FOLLOWUP_MONTH          NUMBER,
  NEURO_EVALUATION_DATE   DATE,
  KARNOFSKY_SCORE         NUMBER,
  LANSKY_SCORE            NUMBER,
  NEURO_EXAM              NUMBER,
  MRI_CT_SCORE            NUMBER,
  STEROID_DOSE_STATUS     VARCHAR2(20),
  ANTI_CONVULSANT_STATUS  VARCHAR2(20),
  NEURO_EXAM_DESC         VARCHAR2(50),
  MRI_CT_SCORE_DESC       VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE NEUROLOGICAL_SYMPTOM
(
  NEUROLOGICAL_SYMPTOM_ID  NUMBER               NOT NULL,
  PATIENT_DID              NUMBER,
  INSTITUTION_ID           NUMBER,
  DATASET_ID               NUMBER,
  TIME_POINT               VARCHAR2(30),
  FOLLOWUP_DATE            DATE,
  FOLLOWUP_MONTH           NUMBER,
  SYMP_EVALUATION_DATE     DATE,
  SEIZURES                 VARCHAR2(20),
  CEREBRAL_EDEMA           VARCHAR2(20),
  RADIATION_NECROSIS       VARCHAR2(20),
  CUSHINGOID_FEATURES      VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE NEURO_EXAM_SCORE
(
  NEURO_EXAM_SCORE_ID    NUMBER                 NOT NULL,
  NEURO_EXAM_SCORE       VARCHAR2(20),
  NEURO_EXAM_SCORE_DESC  VARCHAR2(200),
  NEURO_EXAM_SCORE_NUM   NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PATIENT
(
  PATIENT_DID         NUMBER                    NOT NULL,
  POPULATION_TYPE_ID  NUMBER,
  AGE                 NUMBER,
  SURVIVAL_LENGTH     NUMBER,
  CENSORING_STATUS    VARCHAR2(5),
  GENDER              VARCHAR2(5),
  WHO_GRADE           VARCHAR2(5),
  LOAD_IN_DATE        DATE,
  INSTITUTION         VARCHAR2(50),
  RACE                VARCHAR2(15),
  INSTITUTION_ID      NUMBER,
  SAMPLE_ID           VARCHAR2(20),
  DISEASE_TYPE_ID     NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PATIENT_DATA
(
  SAMPLE_ID            VARCHAR2(50)             NOT NULL,
  BIOSPECIMEN_ID       NUMBER                   NOT NULL,
  PATIENT_DID          NUMBER,
  POPULATION_TYPE_ID   NUMBER,
  AGE                  NUMBER,
  AGE_GROUP            VARCHAR2(20),
  SURVIVAL_LENGTH      NUMBER,
  SURVIV_LENGTH_RANGE  VARCHAR2(15),
  GENDER               VARCHAR2(5),
  DISEASE_TYPE         VARCHAR2(100),
  WHO_GRADE            VARCHAR2(5),
  CENSORING_STATUS     VARCHAR2(5),
  RACE                 VARCHAR2(15),
  INSTITUTION_ID       NUMBER,
  INSTITUTION_NAME     VARCHAR2(50),
  SPECIMEN_NAME        VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PATIENT_TREATMENT
(
  PATIENT_DID           NUMBER,
  TREATMENT_HISTORY_ID  NUMBER,
  AGENT_ID              NUMBER,
  ADMIN_DOSE            NUMBER(12,6),
  ADMIN_CYCLE           NUMBER,
  TOTAL_DOSE            NUMBER(12,6),
  START_DATE            DATE,
  STOP_DATE             DATE,
  ADMIN_ROUTE           VARCHAR2(50),
  ADMIN_FREQUENCY       VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE POPULATION_TYPE
(
  POPULATION_TYPE_ID    NUMBER                  NOT NULL,
  POPULATION_TYPE_NAME  VARCHAR2(50),
  POPULATION_TYPE_DESC  VARCHAR2(200)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PRIMARY_ASSESSMENT
(
  PRIMARY_ASSESSMENT_ID   NUMBER                NOT NULL,
  PATIENT_DID             NUMBER,
  INSTITUTION_ID          NUMBER,
  DATASET_ID              NUMBER,
  CONDUCT_DATE            DATE,
  CNS_FINDING             VARCHAR2(30),
  STEROID_DOSE            VARCHAR2(30),
  ANTI_CONVUSANT          VARCHAR2(30),
  SEIZURE_HISTORY         VARCHAR2(30),
  CUSHINGOID_FEATURE      VARCHAR2(30),
  DEEP_VENOUS_THROMBOSIS  VARCHAR2(30)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PRIOR_CHEMOTHERAPY
(
  PRIOR_CHEMOTRX_ID  NUMBER                     NOT NULL,
  PATIENT_DID        NUMBER,
  INSTITUTION_ID     NUMBER,
  DATASET_ID         NUMBER,
  TIME_POINT         VARCHAR2(30),
  AGENT_ID           NUMBER,
  AGENT_NAME         VARCHAR2(100),
  COURSE_COUNT       NUMBER,
  DOSE_START_DATE    DATE,
  DOSE_STOP_DATE     DATE,
  STUDY_SOURCE       VARCHAR2(20),
  PROTOCOL_NUMBER    VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PRIOR_RADIATIONTHERAPY
(
  PRIOR_RADIATIONTRX_ID  NUMBER                 NOT NULL,
  PATIENT_DID            NUMBER,
  INSTITUTION_ID         NUMBER,
  DATASET_ID             NUMBER,
  TIME_POINT             VARCHAR2(30),
  RADIATION_SITE         VARCHAR2(100),
  DOSE_START_DATE        DATE,
  DOSE_STOP_DATE         DATE,
  FRACTION_DOSE          NUMBER,
  FRACTION_NUMBER        NUMBER,
  RADIATION_TYPE         VARCHAR2(30),
  NEUROSIS_STATUS        VARCHAR2(30)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PRIOR_SURGERY
(
  PRIOR_SURGERY_ID  NUMBER                      NOT NULL,
  PATIENT_DID       NUMBER,
  INSTITUTION_ID    NUMBER,
  DATASET_ID        NUMBER,
  TIME_POINT        VARCHAR2(30),
  PROCEDURE_TITLE   VARCHAR2(50),
  TUMOR_HISTOLOGY   VARCHAR2(50),
  SURGERY_DATE      DATE,
  SURGERY_OUTCOME   VARCHAR2(25)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PROBESET_DIM
(
  PROBESET_ID       NUMBER,
  PROBESET_NAME     VARCHAR2(200)               NOT NULL,
  ARRAY_NAME        VARCHAR2(100)               NOT NULL,
  GENE_SYMBOL       VARCHAR2(1000),
  GENOME_VERSION    VARCHAR2(100),
  ALIGNMENTS        VARCHAR2(2000),
  LL_ID             VARCHAR2(500),
  UNIGENE_ID        VARCHAR2(100),
  EC                VARCHAR2(200),
  KB_START          NUMBER,
  KB_END            NUMBER,
  CHROMOSOME        VARCHAR2(20),
  CYTOBAND          VARCHAR2(1000),
  ACCESSION_NUMBER  VARCHAR2(100),
  OMIM_ID           VARCHAR2(500),
  UP_GENE_SYMBOL    VARCHAR2(50),
  GENE_TITLE        VARCHAR2(4000)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PROTEIN_FAMILY
(
  PROTEIN_FAMILY  VARCHAR2(1000),
  PROBESET_ID     NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PT_CHEMOTHERAPY
(
  PT_CHEMOTRX_ID   NUMBER                       NOT NULL,
  PATIENT_DID      NUMBER,
  INSTITUTION_ID   NUMBER,
  DATASET_ID       NUMBER,
  TIME_POINT       VARCHAR2(30),
  AGENT_ID         NUMBER,
  AGENT_NAME       VARCHAR2(100),
  REGIMEN_NUMBER   NUMBER,
  DOSE_START_DATE  DATE,
  COURSE_COUNT     NUMBER,
  DOSE_STOP_DATE   DATE,
  STUDY_SOURCE     VARCHAR2(20),
  PROTOCOL_NUMBER  VARCHAR2(20)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PT_DX
(
  PATIENTID  VARCHAR2(20),
  SIMPLE_DX  VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PT_DXDT
(
  PATIENTID  VARCHAR2(20),
  DX         VARCHAR2(50),
  DT         DATE
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PT_DXSUR
(
  PATIENTID    VARCHAR2(20),
  DXDT         DATE,
  DX_AGE       NUMBER,
  DEATH_DT     DATE,
  SURV_LENGTH  NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PT_GE_VAL
(
  SAMPLE_ID  VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PT_RADIATIONTHERAPY
(
  PT_RADIATIONTRX_ID  NUMBER                    NOT NULL,
  PATIENT_DID         NUMBER,
  INSTITUTION_ID      NUMBER,
  DATASET_ID          NUMBER,
  TIME_POINT          VARCHAR2(30),
  RADIATION_SITE      VARCHAR2(100),
  DOSE_START_DATE     DATE,
  FRACTION_DOSE       NUMBER,
  FRACTION_NUMBER     NUMBER,
  DOSE_STOP_DATE      DATE,
  NEUROSIS_STATUS     VARCHAR2(30),
  RADIATION_TYPE      VARCHAR2(30)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE PT_SURGERY
(
  PT_SURGERY_ID    NUMBER                       NOT NULL,
  PATIENT_DID      NUMBER,
  INSTITUTION_ID   NUMBER,
  DATASET_ID       NUMBER,
  TIME_POINT       VARCHAR2(30),
  SURGERY_DATE     DATE,
  PROCEDURE_TITLE  VARCHAR2(50),
  INDICATION       VARCHAR2(20),
  HISTO_DIAGNOSIS  VARCHAR2(100),
  SURGERY_OUTCOME  VARCHAR2(25)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE REFSEQ_MRNA_ID
(
  REFSEQ_MRNA_ID  VARCHAR2(50),
  PROBESET_ID     NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE REFSEQ_PROTEIN_ID
(
  REFSEQ_PROTEIN_ID  VARCHAR2(20),
  PROBESET_ID        NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE SAMPLE_AGE_SURV_GRP
(
  SAMPLE_ID  VARCHAR2(20),
  AGE_GRP    VARCHAR2(20),
  SURV_GRP   VARCHAR2(15)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE SNP_PROBESET_DIM
(
  SNP_PROBESET_ID        NUMBER                 NOT NULL,
  ARRAY_NAME             VARCHAR2(50)           NOT NULL,
  PROBESET_NAME          VARCHAR2(200)          NOT NULL,
  DB_SNP_ID              VARCHAR2(18),
  PHYSICAL_POSITION      NUMBER,
  CYTOBAND               VARCHAR2(50),
  CHROMOSOME             VARCHAR2(20),
  ALLELE_A               VARCHAR2(10),
  ALLELE_A_FREQUENCY_AS  VARCHAR2(100),
  ALLELE_A_FREQUENCY_AF  VARCHAR2(100),
  ALLELE_A_FREQUENCY_CA  VARCHAR2(100),
  ALLELE_B               VARCHAR2(10),
  ALLELE_B_FREQUENCY_AS  VARCHAR2(100),
  ALLELE_B_FREQUENCY_AF  VARCHAR2(100),
  ALLELE_B_FREQUENCY_CA  VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE SPECIMEN_GE
(
  SPECIMEN_NAME  VARCHAR2(100)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE STUDY_DATASET_DIM
(
  DATASET_ID    NUMBER                          NOT NULL,
  DATASET_NAME  VARCHAR2(100),
  DATASET_DESC  VARCHAR2(255),
  LOAD_IN_DATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE STUDY_TIMECOURSE_DIM
(
  TIMECOURSE_ID    NUMBER                       NOT NULL,
  TIMECOURSE_NAME  VARCHAR2(50),
  TIMECOURSE_DESC  VARCHAR2(200)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE SURVIVAL_LENGTH_RANGE_DIM
(
  SURVIVAL_LENGTH_RANGE  VARCHAR2(15)           NOT NULL,
  GROUP_DESC             VARCHAR2(100),
  LOWERBOUND             NUMBER(5),
  UPPERBOUND             NUMBER(8)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE SWISSPROT
(
  SWISSPROT    VARCHAR2(50),
  PROBESET_ID  NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE UNFIED_HUGO_GENE
(
  UNIFIED_GENE  VARCHAR2(200),
  GENE_SYMBOL   VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE TABLE UNIFIED_GENE_ANNO
(
  UNIFIED_GENE  VARCHAR2(200),
  GENE_SYMBOL   VARCHAR2(50)
)
LOGGING 
NOCACHE
NOPARALLEL;


CREATE BITMAP INDEX ABNF_AGEGRP_BIDX ON ARRAY_GENO_ABN_FACT
(AGE_GROUP)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_CHR_BIDX ON ARRAY_GENO_ABN_FACT
(CHROMOSOME)
LOGGING
NOPARALLEL;


CREATE INDEX ABNF_CPNO_IDX ON ARRAY_GENO_ABN_FACT
(COPY_NUMBER)
LOGGING
NOPARALLEL;


CREATE INDEX ABNF_CPV_IDX ON ARRAY_GENO_ABN_FACT
(COPYNO_PVAL)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_CYTOBAND_BIDX ON ARRAY_GENO_ABN_FACT
(CYTOBAND)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_DATASET_BIDX ON ARRAY_GENO_ABN_FACT
(DATASET_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_DISHIST_BIDX ON ARRAY_GENO_ABN_FACT
(DISEASE_HISTORY_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_DISTYPE_BIDX ON ARRAY_GENO_ABN_FACT
(DISEASE_TYPE_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_EXPPLAT_BIDX ON ARRAY_GENO_ABN_FACT
(EXP_PLATFORM_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_INSTID_BIDX ON ARRAY_GENO_ABN_FACT
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_INSTNM_BIDX ON ARRAY_GENO_ABN_FACT
(INSTITUTION_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX ABNF_LOH_IDX ON ARRAY_GENO_ABN_FACT
(LOH)
LOGGING
NOPARALLEL;


CREATE INDEX ABNF_PRONM_IDX ON ARRAY_GENO_ABN_FACT
(SNP_PROBESET_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX ABNF_PROSAM_IDX ON ARRAY_GENO_ABN_FACT
(SNP_PROBESET_ID, SAMPLE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX ABNF_SAMNM_IDX ON ARRAY_GENO_ABN_FACT
(SPECIMEN_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX ABNF_SAM_IDX ON ARRAY_GENO_ABN_FACT
(BIOSPECIMEN_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_SEX_BIDX ON ARRAY_GENO_ABN_FACT
(GENDER_CODE)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX ABNF_SURLEG_BIDX ON ARRAY_GENO_ABN_FACT
(SURVIVAL_LENGTH_RANGE)
LOGGING
NOPARALLEL;


CREATE INDEX ACP_ACCNUM_IDX ON ACC_CHR_POSITION
(ACCESSION_NUM)
LOGGING
NOPARALLEL;


CREATE INDEX ACP_CHROMOSOME_IDX ON ACC_CHR_POSITION
(CHROMOSOME)
LOGGING
NOPARALLEL;


CREATE INDEX AGD_AGNM_IDX ON AGENT_DIM
(AGENT_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX BIOS_SAM_IDX ON BIOSPECIMEN_DIM
(SAMPLE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX BIOS_SPECIMEN_NM_IDX ON BIOSPECIMEN_DIM
(SPECIMEN_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX BIO_PTDID_IDX ON BIOSPECIMEN_DIM
(PATIENT_DID)
LOGGING
NOPARALLEL;


CREATE INDEX CD_CYTOBAND_IDX ON CLONE_DIM
(CYTOBAND)
LOGGING
NOPARALLEL;


CREATE INDEX CD_UPPER_CLONENM_IDX ON CLONE_DIM
(UPPER("CLONE_NAME"))
LOGGING
NOPARALLEL;


CREATE INDEX CD_UPPER_CYTOBAND_IDX ON CLONE_DIM
(UPPER("CYTOBAND"))
LOGGING
NOPARALLEL;


CREATE INDEX CGGA_GE_IDX ON CG_GA
(GENE_ALIAS)
LOGGING
NOPARALLEL;


CREATE INDEX CLINEV_INSID_IDX ON CLINICAL_EVALUATION
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX CLINEV_PTDID_IDX ON CLINICAL_EVALUATION
(PATIENT_DID)
LOGGING
NOPARALLEL;


CREATE INDEX CLOACC_ACC_IDX ON CLONE_ACCESSION
(ACCESSION_NUMBER)
LOGGING
NOPARALLEL;


CREATE INDEX CLOACC_CL_IDX ON CLONE_ACCESSION
(CLONE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX CLOACC_IM_IDX ON CLONE_ACCESSION
(IMAGE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX CLONENM_IDX ON CLONE_DIM
(CLONE_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX CP_CHRCYTOBAND_IDX ON CYTOBAND_POSITION
(CHR_CYTOBAND)
LOGGING
NOPARALLEL;


CREATE INDEX CP_CHROM_IDX ON CYTOBAND_POSITION
(CHROMOSOME)
LOGGING
NOPARALLEL;


CREATE INDEX CP_CYTOBAND_IDX ON CYTOBAND_POSITION
(CYTOBAND)
LOGGING
NOPARALLEL;


CREATE INDEX CP_END_IDX ON CYTOBAND_POSITION
(CB_END_POS)
LOGGING
NOPARALLEL;


CREATE INDEX CP_START_IDX ON CYTOBAND_POSITION
(CB_START)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DEGSF_PK ON DIFF_EXPRESSION_GENE_SFACT
(DEGS_ID)
LOGGING
NOPARALLEL;


CREATE INDEX DESFG_BIOSPID_IDX ON DIFF_EXPRESSION_GENE_SFACT
(BIOSPECIMEN_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFG_DXID_BIDX ON DIFF_EXPRESSION_GENE_SFACT
(DISEASE_TYPE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX DESFG_GSYMBOL_IDX ON DIFF_EXPRESSION_GENE_SFACT
(GENE_SYMBOL)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFG_INST_BIDX ON DIFF_EXPRESSION_GENE_SFACT
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX DESFG_SPECNME_IDX ON DIFF_EXPRESSION_GENE_SFACT
(SPECIMEN_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX DESFG_UNIGENE_IDX ON DIFF_EXPRESSION_GENE_SFACT
(UNIFIED_GENE)
LOGGING
NOPARALLEL;


CREATE INDEX DESFG_UPPER_GSYMBOL_IDX ON DIFF_EXPRESSION_GENE_SFACT
(UPPER("GENE_SYMBOL"))
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_AGEGRP_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(AGE_GROUP)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_BIOSPID_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(BIOSPECIMEN_ID)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_CLONEID_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(CLONE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_CLONENM_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(CLONE_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_CYTOBAND_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(CYTOBAND)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_DATASET_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(DATASET_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_DISEASETYPE_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(DISEASE_TYPE)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_DISHISTO_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(DISEASE_HISTORY_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_DISTYPE_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(DISEASE_TYPE_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_EXPPLAT_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(EXP_PLATFORM_ID)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_EXPR_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(EXPRESSION_RATIO)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_GENDER_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(GENDER_CODE)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_INSTNM_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(INSTITUTION_NAME)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_INST_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_NORMI_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(NORMAL_INTENSITY)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_PROSETID_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(PROBESET_ID)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_PROSETNM_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(PROBESET_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_SAMI_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(SAMPLE_INTENSITY)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_SAMPLEID_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(SAMPLE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_SPECNM_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(SPECIMEN_NAME)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX DESFP_SURLENG_BIDX ON DIFFERENTIAL_EXPRESSION_SFACT
(SURVIV_LENGTH_RANGE)
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_UPPER_CLONENM_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(UPPER("CLONE_NAME"))
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_UPPER_GSYMBOL_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(UPPER("GENE_SYMBOL"))
LOGGING
NOPARALLEL;


CREATE INDEX DESFP_UPPER_PROBNM_IDX ON DIFFERENTIAL_EXPRESSION_SFACT
(UPPER("PROBESET_NAME"))
LOGGING
NOPARALLEL;


CREATE INDEX DISEASE_DX_IDX ON DISEASE_TYPE_DIM
(DISEASE_TYPE)
LOGGING
NOPARALLEL;


CREATE INDEX GC_ACC_IDX ON GENE_CLONE
(ACCESSION_NUMBER)
LOGGING
NOPARALLEL;


CREATE INDEX GC_GENECLONE_IND ON GENE_CLONE
(CLONE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX GC_GSYMBOL_IDX ON GENE_CLONE
(GENE_SYMBOL)
LOGGING
NOPARALLEL;


CREATE INDEX GC_IMAGEID_IDX ON GENE_CLONE
(IMAGE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX GC_LLID_IDX ON GENE_CLONE
(LL_ID)
LOGGING
NOPARALLEL;


CREATE INDEX GC_UPGENE_IDX ON GENE_CLONE
(UP_GENE_SYMBOL)
LOGGING
NOPARALLEL;


CREATE INDEX GC_UPPER_GSYMBOL_IDX ON GENE_CLONE
(UPPER("GENE_SYMBOL"))
LOGGING
NOPARALLEL;


CREATE INDEX GEEXPSTG_PROB_IDX ON GEEXP_PROBESET_SFSTG
(PROBESET_NAME)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX GEEXPSTG_PROB_SPEC_BIDX ON GEEXP_PROBESET_SFSTG
(SPECIMEN_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX GLAS_ACC_IDX ON GENE_LL_ACC_SNP
(ACCESSION)
LOGGING
NOPARALLEL;


CREATE INDEX GLAS_CHR_BIDX ON GENE_LL_ACC_SNP
(CHROMOSOME)
LOGGING
NOPARALLEL;


CREATE INDEX GLAS_GENE_IDX ON GENE_LL_ACC_SNP
(GENE_SYMBOL)
LOGGING
NOPARALLEL;


CREATE INDEX GLAS_LLID_IDX ON GENE_LL_ACC_SNP
(LL_ID)
LOGGING
NOPARALLEL;


CREATE INDEX GLAS_SNPID_IDX ON GENE_LL_ACC_SNP
(SNP_PROBESET_ID)
LOGGING
NOPARALLEL;


CREATE INDEX GLAS_SNPNM_IDX ON GENE_LL_ACC_SNP
(PROBESET_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX GLAS_UPGENE_IDX ON GENE_LL_ACC_SNP
(UP_GENE_SYMBOL)
LOGGING
NOPARALLEL;


CREATE INDEX GO_GONM_IDX ON GENE_ONTOLOGY
(GO_NAME)
NOLOGGING
NOPARALLEL;


CREATE INDEX GO_NGOIDX_IDX ON GENE_ONTOLOGY
(GO_ID)
NOLOGGING
NOPARALLEL;


CREATE INDEX GO_SYMBOL_IDX ON GENE_ONTOLOGY
(GENE_SYMBOL)
NOLOGGING
NOPARALLEL;


CREATE INDEX GO_UPGENE_IDX ON GENE_ONTOLOGY
(UP_GENE_SYMBOL)
NOLOGGING
NOPARALLEL;


CREATE INDEX GO_UPPER_GSYMBOL_IDX ON GENE_ONTOLOGY
(UPPER("GENE_SYMBOL"))
NOLOGGING
NOPARALLEL;


CREATE INDEX GP_GSYMBOL_IDX ON GENE_PATHWAY
(GENE_SYMBOL)
LOGGING
NOPARALLEL;


CREATE INDEX GP_PATHNM_IDX ON GENE_PATHWAY
(PATHWAY_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX GP_UPPER_GSYMBOL_IDX ON GENE_PATHWAY
(UPPER("GENE_SYMBOL"))
LOGGING
NOPARALLEL;


CREATE INDEX GP_UPPER_PATHWAY_IDX ON GENE_PATHWAY
(UPPER("PATHWAY_NAME"))
LOGGING
NOPARALLEL;


CREATE INDEX HUGA_GA_ALI_IDX ON HUGO_GENE_ALIAS
(ALIAS)
LOGGING
NOPARALLEL;


CREATE INDEX HUGO_GA_GENE_IDX ON HUGO_GENE_ALIAS
(APPROVED_SYMBOL)
LOGGING
NOPARALLEL;


CREATE INDEX HUGO_GA_IDX ON HUGO_GA
(GENE_ALIAS)
LOGGING
NOPARALLEL;


CREATE INDEX HUGO_GA_UPGENE_IDX ON HUGO_GENE_ALIAS
(UP_SYMBOL)
LOGGING
NOPARALLEL;


CREATE INDEX INSD_INSTNM_IDX ON INSTITUTION_DIM
(INSTITUTION_NAME)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LIST_ITEM_PK ON LIST_ITEM
(ITEM_ID)
LOGGING
NOPARALLEL;


CREATE INDEX LSWISS_PROB_IDX ON L_PROBESET_SWISSPROT
(PROBE_SET_ID)
LOGGING
NOPARALLEL;


CREATE INDEX LS_LLID_IDX ON LL_SNP
(LL_ID)
LOGGING
NOPARALLEL;


CREATE INDEX LS_SNPID_IDX ON LL_SNP
(SNP_PROBESET_ID)
LOGGING
NOPARALLEL;


CREATE INDEX LS_SNPNM_IDX ON LL_SNP
(PROBESET_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX L_PROBE_ALIG_IDX ON L_PROBESET_ALIGNMENTS
(PROBE_SET_ID)
LOGGING
NOPARALLEL;


CREATE INDEX L_PROBE_CYTO_IDX ON L_PROBESET_CHR_LOCATION
(PROBE_SET_ID)
LOGGING
NOPARALLEL;


CREATE INDEX L_PROBE_GS_IDX ON L_PROBESET_GENE_SYMBOL
(PROBE_SET_ID)
LOGGING
NOPARALLEL;


CREATE INDEX L_PROBE_LL_IDX ON L_PROBESET_ENTREZ_GENE
(PROBE_SET_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PATIENT_SAMID_IDX ON PATIENT
(SAMPLE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PD_ACCNNB_IDX ON PROBESET_DIM
(ACCESSION_NUMBER)
LOGGING
NOPARALLEL;


CREATE INDEX PD_CHROM_IDX ON PROBESET_DIM
(CHROMOSOME)
LOGGING
NOPARALLEL;


CREATE INDEX PD_KBEND_IDX ON PROBESET_DIM
(KB_END)
LOGGING
NOPARALLEL;


CREATE INDEX PD_KBSTART_IDX ON PROBESET_DIM
(KB_START)
LOGGING
NOPARALLEL;


CREATE INDEX PD_LLID_IDX ON PROBESET_DIM
(LL_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PD_SYMBOL_IDX ON PROBESET_DIM
(GENE_SYMBOL)
LOGGING
NOPARALLEL;


CREATE INDEX PD_UPGENE_IDX ON PROBESET_DIM
(UP_GENE_SYMBOL)
LOGGING
NOPARALLEL;


CREATE INDEX PD_UPPER_CYTOBAND_IDX ON PROBESET_DIM
(UPPER("CYTOBAND"))
LOGGING
NOPARALLEL;


CREATE INDEX PD_UPPER_GSYMBOL_IDX ON PROBESET_DIM
(UPPER("GENE_SYMBOL"))
LOGGING
NOPARALLEL;


CREATE INDEX PD_UPPER_PROBNM_IDX ON PROBESET_DIM
(UPPER("PROBESET_NAME"))
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_APPLICATION ON CSM_APPLICATION
(APPLICATION_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_GROUP ON CSM_GROUP
(GROUP_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_LIST ON LIST
(LIST_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PG_PE ON CSM_PG_PE
(PG_PE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PRIVILEGE ON CSM_PRIVILEGE
(PRIVILEGE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PROTECTION_ELEMENT ON CSM_PROTECTION_ELEMENT
(PROTECTION_ELEMENT_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_PROTECTION_GROUP ON CSM_PROTECTION_GROUP
(PROTECTION_GROUP_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ROLE ON CSM_ROLE
(ROLE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_ROLE_PRIVILEGE ON CSM_ROLE_PRIVILEGE
(ROLE_PRIVILEGE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_USER ON CSM_USER
(USER_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_USER_GROUP ON CSM_USER_GROUP
(USER_GROUP_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_USER_GROUP_ROLE_PG ON CSM_USER_GROUP_ROLE_PG
(USER_GROUP_ROLE_PG_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PK_USER_PROTECTION_ELEMENT ON CSM_USER_PE
(USER_PROTECTION_ELEMENT_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PRICUR_DX_IDX ON PRIOR_SURGERY
(TUMOR_HISTOLOGY)
LOGGING
NOPARALLEL;


CREATE INDEX PRICUR_INSID_IDX ON PRIOR_SURGERY
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PRICUR_OUTCOME_IDX ON PRIOR_SURGERY
(SURGERY_OUTCOME)
LOGGING
NOPARALLEL;


CREATE INDEX PRICUR_PTDID_IDX ON PRIOR_SURGERY
(PATIENT_DID)
LOGGING
NOPARALLEL;


CREATE INDEX PRIRAD_INSID_IDX ON PRIOR_RADIATIONTHERAPY
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PRIRAD_PTDID_IDX ON PRIOR_RADIATIONTHERAPY
(PATIENT_DID)
LOGGING
NOPARALLEL;


CREATE INDEX PRIRAD_RTYPE_IDX ON PRIOR_RADIATIONTHERAPY
(RADIATION_TYPE)
LOGGING
NOPARALLEL;


CREATE INDEX PRITAD_RSITE_IDX ON PRIOR_RADIATIONTHERAPY
(RADIATION_SITE)
LOGGING
NOPARALLEL;


CREATE INDEX PROBE_NM_IDX ON PROBESET_DIM
(PROBESET_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX PTCHEMO_AGNM_IDX ON PT_CHEMOTHERAPY
(AGENT_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX PTCHEMO_INSID_IDX ON PT_CHEMOTHERAPY
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PTCHEMO_PTDID_IDX ON PT_CHEMOTHERAPY
(PATIENT_DID)
LOGGING
NOPARALLEL;


CREATE INDEX PTDATA_BIOSPEID_IDX ON PATIENT_DATA
(BIOSPECIMEN_ID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX PTDATA_CENSOR_BIDX ON PATIENT_DATA
(CENSORING_STATUS)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX PTDATA_GENDER_BIDX ON PATIENT_DATA
(GENDER)
LOGGING
NOPARALLEL;


CREATE INDEX PTDATA_INSTID_IDX ON PATIENT_DATA
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PTDATA_INSTNM_IDX ON PATIENT_DATA
(INSTITUTION_NAME)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX PTDATA_POPID_BIDX ON PATIENT_DATA
(POPULATION_TYPE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PTDATA_PTDID_IDX ON PATIENT_DATA
(PATIENT_DID)
LOGGING
NOPARALLEL;


CREATE BITMAP INDEX PTDATA_RACE_BIDX ON PATIENT_DATA
(RACE)
LOGGING
NOPARALLEL;


CREATE INDEX PTDATA_SAMPLEID_IDX ON PATIENT_DATA
(SAMPLE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PTDX_SAMPLE_IDX ON PT_DX
(PATIENTID)
LOGGING
NOPARALLEL;


CREATE INDEX PTRADIO_INSID_IDX ON PT_RADIATIONTHERAPY
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PTRADIO_PTDID_IDX ON PT_RADIATIONTHERAPY
(PATIENT_DID)
LOGGING
NOPARALLEL;


CREATE INDEX PTRADIO_RTYPE_IDX ON PT_RADIATIONTHERAPY
(RADIATION_TYPE)
LOGGING
NOPARALLEL;


CREATE INDEX PTSUR_HISTODX_IDX ON PT_SURGERY
(HISTO_DIAGNOSIS)
LOGGING
NOPARALLEL;


CREATE INDEX PTSUR_INSTID_IDX ON PT_SURGERY
(INSTITUTION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX PTSUR_OUTCOME_IDX ON PT_SURGERY
(SURGERY_OUTCOME)
LOGGING
NOPARALLEL;


CREATE INDEX PTSUR_PTDID_IDX ON PT_SURGERY
(PATIENT_DID)
LOGGING
NOPARALLEL;


CREATE INDEX SNPPD_CHR_IDX ON SNP_PROBESET_DIM
(CHROMOSOME)
LOGGING
NOPARALLEL;


CREATE INDEX SNPPD_CYTOBAND_IDX ON SNP_PROBESET_DIM
(CYTOBAND)
LOGGING
NOPARALLEL;


CREATE INDEX SNPPD_DBSNP_IDX ON SNP_PROBESET_DIM
(DB_SNP_ID)
LOGGING
NOPARALLEL;


CREATE INDEX SNPPD_PHYSPOS_IDX ON SNP_PROBESET_DIM
(PHYSICAL_POSITION)
LOGGING
NOPARALLEL;


CREATE INDEX SNPPD_UPPER_CYTOBAND_IDX ON SNP_PROBESET_DIM
(UPPER("CYTOBAND"))
LOGGING
NOPARALLEL;


CREATE INDEX SNPPD_UPPER_PROBNM_IDX ON SNP_PROBESET_DIM
(UPPER("PROBESET_NAME"))
LOGGING
NOPARALLEL;


CREATE INDEX SNPPROB_PRONM_IDX ON SNP_PROBESET_DIM
(PROBESET_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX SPECIMEN_GE_SPECNM_IDX ON SPECIMEN_GE
(SPECIMEN_NAME)
LOGGING
NOPARALLEL;


CREATE INDEX UNFGENE_UGENE_IDX ON UNFIED_HUGO_GENE
(UNIFIED_GENE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_APPLICATION_NAME ON CSM_APPLICATION
(APPLICATION_NAME)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_GROUP_GROUP_NAME ON CSM_GROUP
(APPLICATION_ID, GROUP_NAME)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_LOGIN_NAME ON CSM_USER
(LOGIN_NAME)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_PE_OBJ_ATT_APP_ID ON CSM_PROTECTION_ELEMENT
(OBJECT_ID, ATTRIBUTE, APPLICATION_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_PG_PE_PG_PE_ID ON CSM_PG_PE
(PROTECTION_ELEMENT_ID, PROTECTION_GROUP_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_PG_PG_NAME ON CSM_PROTECTION_GROUP
(APPLICATION_ID, PROTECTION_GROUP_NAME)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_PRIVILEGE_NAME ON CSM_PRIVILEGE
(PRIVILEGE_NAME)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_ROLE_ID_PRIVILEGE_ID ON CSM_ROLE_PRIVILEGE
(PRIVILEGE_ID, ROLE_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_ROLE_ROLE_NAME ON CSM_ROLE
(APPLICATION_ID, ROLE_NAME)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UQ_USER_PE_PE_ID ON CSM_USER_PE
(USER_ID, PROTECTION_ELEMENT_ID)
LOGGING
NOPARALLEL;


ALTER TABLE AGENT_DIM ADD (
  PRIMARY KEY (AGENT_ID));


ALTER TABLE AGE_GROUP_DX_DIM ADD (
  PRIMARY KEY (AGE_GROUP));


ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  PRIMARY KEY (AGA_ID));


ALTER TABLE BIOSPECIMEN_DIM ADD (
  PRIMARY KEY (BIOSPECIMEN_ID));


ALTER TABLE CLONE_DIM ADD (
  PRIMARY KEY (CLONE_ID));


ALTER TABLE CSM_APPLICATION ADD (
  CONSTRAINT PK_APPLICATION PRIMARY KEY (APPLICATION_ID));

ALTER TABLE CSM_APPLICATION ADD (
  CONSTRAINT UQ_APPLICATION_NAME UNIQUE (APPLICATION_NAME));


ALTER TABLE CSM_GROUP ADD (
  CONSTRAINT PK_GROUP PRIMARY KEY (GROUP_ID));

ALTER TABLE CSM_GROUP ADD (
  CONSTRAINT UQ_GROUP_GROUP_NAME UNIQUE (APPLICATION_ID, GROUP_NAME));


ALTER TABLE CSM_PG_PE ADD (
  CONSTRAINT PK_PG_PE PRIMARY KEY (PG_PE_ID));

ALTER TABLE CSM_PG_PE ADD (
  CONSTRAINT UQ_PG_PE_PG_PE_ID UNIQUE (PROTECTION_ELEMENT_ID, PROTECTION_GROUP_ID));


ALTER TABLE CSM_PRIVILEGE ADD (
  CONSTRAINT PK_PRIVILEGE PRIMARY KEY (PRIVILEGE_ID));

ALTER TABLE CSM_PRIVILEGE ADD (
  CONSTRAINT UQ_PRIVILEGE_NAME UNIQUE (PRIVILEGE_NAME));


ALTER TABLE CSM_PROTECTION_ELEMENT ADD (
  CONSTRAINT PK_PROTECTION_ELEMENT PRIMARY KEY (PROTECTION_ELEMENT_ID));

ALTER TABLE CSM_PROTECTION_ELEMENT ADD (
  CONSTRAINT UQ_PE_OBJ_ATT_APP_ID UNIQUE (OBJECT_ID, ATTRIBUTE, APPLICATION_ID));


ALTER TABLE CSM_PROTECTION_GROUP ADD (
  CONSTRAINT PK_PROTECTION_GROUP PRIMARY KEY (PROTECTION_GROUP_ID));

ALTER TABLE CSM_PROTECTION_GROUP ADD (
  CONSTRAINT UQ_PG_PG_NAME UNIQUE (APPLICATION_ID, PROTECTION_GROUP_NAME));


ALTER TABLE CSM_ROLE ADD (
  CONSTRAINT PK_ROLE PRIMARY KEY (ROLE_ID));

ALTER TABLE CSM_ROLE ADD (
  CONSTRAINT UQ_ROLE_ROLE_NAME UNIQUE (APPLICATION_ID, ROLE_NAME));


ALTER TABLE CSM_ROLE_PRIVILEGE ADD (
  CONSTRAINT PK_ROLE_PRIVILEGE PRIMARY KEY (ROLE_PRIVILEGE_ID));

ALTER TABLE CSM_ROLE_PRIVILEGE ADD (
  CONSTRAINT UQ_ROLE_ID_PRIVILEGE_ID UNIQUE (PRIVILEGE_ID, ROLE_ID));


ALTER TABLE CSM_USER ADD (
  CONSTRAINT PK_USER PRIMARY KEY (USER_ID));

ALTER TABLE CSM_USER ADD (
  CONSTRAINT UQ_LOGIN_NAME UNIQUE (LOGIN_NAME));


ALTER TABLE CSM_USER_GROUP ADD (
  CONSTRAINT PK_USER_GROUP PRIMARY KEY (USER_GROUP_ID));


ALTER TABLE CSM_USER_GROUP_ROLE_PG ADD (
  CONSTRAINT PK_USER_GROUP_ROLE_PG PRIMARY KEY (USER_GROUP_ROLE_PG_ID));


ALTER TABLE CSM_USER_PE ADD (
  CONSTRAINT PK_USER_PROTECTION_ELEMENT PRIMARY KEY (USER_PROTECTION_ELEMENT_ID));

ALTER TABLE CSM_USER_PE ADD (
  CONSTRAINT UQ_USER_PE_PE_ID UNIQUE (USER_ID, PROTECTION_ELEMENT_ID));


ALTER TABLE CYTOBAND_POSITION ADD (
  PRIMARY KEY (CYTOBAND_POSITION_ID));


ALTER TABLE DETECTION_TYPE ADD (
  PRIMARY KEY (DETECTION_TYPE_ID));


ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  PRIMARY KEY (DES_ID));


ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  CONSTRAINT DEGSF_PK PRIMARY KEY (DEGS_ID));


ALTER TABLE DISEASE_HISTORY_DIM ADD (
  PRIMARY KEY (DISEASE_HISTORY_ID));


ALTER TABLE DISEASE_TYPE_DIM ADD (
  PRIMARY KEY (DISEASE_TYPE_ID));


ALTER TABLE EXP_PLATFORM_DIM ADD (
  PRIMARY KEY (EXP_PLATFORM_ID));


ALTER TABLE GENDER_DIM ADD (
  PRIMARY KEY (GENDER_CODE));


ALTER TABLE GENE_CLONE ADD (
  PRIMARY KEY (GENE_CLONE_ID));


ALTER TABLE GENO_ABN_TYPE ADD (
  PRIMARY KEY (GENO_ABN_TYPE));


ALTER TABLE INSTITUTION_DIM ADD (
  PRIMARY KEY (INSTITUTION_ID));


ALTER TABLE LIST ADD (
  CONSTRAINT PK_LIST PRIMARY KEY (LIST_ID));


ALTER TABLE LIST_ITEM ADD (
  CONSTRAINT LIST_ITEM_PK PRIMARY KEY (ITEM_ID));


ALTER TABLE LOSS_GAIN_CODE ADD (
  PRIMARY KEY (LOSS_GAIN));


ALTER TABLE NEUROLOGICAL_EVALUATION ADD (
  PRIMARY KEY (NEURO_EVALUATION_ID));


ALTER TABLE NEUROLOGICAL_SYMPTOM ADD (
  PRIMARY KEY (NEUROLOGICAL_SYMPTOM_ID));


ALTER TABLE PATIENT ADD (
  PRIMARY KEY (PATIENT_DID));


ALTER TABLE POPULATION_TYPE ADD (
  PRIMARY KEY (POPULATION_TYPE_ID));


ALTER TABLE SNP_PROBESET_DIM ADD (
  PRIMARY KEY (SNP_PROBESET_ID));


ALTER TABLE STUDY_DATASET_DIM ADD (
  PRIMARY KEY (DATASET_ID));


ALTER TABLE STUDY_TIMECOURSE_DIM ADD (
  PRIMARY KEY (TIMECOURSE_ID));


ALTER TABLE SURVIVAL_LENGTH_RANGE_DIM ADD (
  PRIMARY KEY (SURVIVAL_LENGTH_RANGE));


ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (TIMECOURSE_ID) 
    REFERENCES STUDY_TIMECOURSE_DIM (TIMECOURSE_ID));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (EXP_PLATFORM_ID) 
    REFERENCES EXP_PLATFORM_DIM (EXP_PLATFORM_ID));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (GENDER_CODE) 
    REFERENCES GENDER_DIM (GENDER_CODE));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (DATASET_ID) 
    REFERENCES STUDY_DATASET_DIM (DATASET_ID));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (INSTITUTION_ID) 
    REFERENCES INSTITUTION_DIM (INSTITUTION_ID));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (DISEASE_TYPE_ID) 
    REFERENCES DISEASE_TYPE_DIM (DISEASE_TYPE_ID));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (AGENT_ID) 
    REFERENCES AGENT_DIM (AGENT_ID));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (TREATMENT_HISTORY_ID) 
    REFERENCES TREATMENT_HISTORY_DIM (TREATMENT_HISTORY_ID));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (DISEASE_HISTORY_ID) 
    REFERENCES DISEASE_HISTORY_DIM (DISEASE_HISTORY_ID));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (AGE_GROUP) 
    REFERENCES AGE_GROUP_DX_DIM (AGE_GROUP));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (SURVIVAL_LENGTH_RANGE) 
    REFERENCES SURVIVAL_LENGTH_RANGE_DIM (SURVIVAL_LENGTH_RANGE));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (BIOSPECIMEN_ID) 
    REFERENCES BIOSPECIMEN_DIM (BIOSPECIMEN_ID));

ALTER TABLE ARRAY_GENO_ABN_FACT ADD (
  FOREIGN KEY (SNP_PROBESET_ID) 
    REFERENCES SNP_PROBESET_DIM (SNP_PROBESET_ID));


ALTER TABLE BIOSPECIMEN_DIM ADD (
  FOREIGN KEY (PATIENT_DID) 
    REFERENCES PATIENT (PATIENT_DID));

ALTER TABLE BIOSPECIMEN_DIM ADD (
  FOREIGN KEY (DATASET_ID) 
    REFERENCES STUDY_DATASET_DIM (DATASET_ID));


ALTER TABLE CSM_GROUP ADD (
  CONSTRAINT FK_CSM_GROUP_CSM_APPLICATION FOREIGN KEY (APPLICATION_ID) 
    REFERENCES CSM_APPLICATION (APPLICATION_ID)
    ON DELETE CASCADE);


ALTER TABLE CSM_PG_PE ADD (
  CONSTRAINT FK_PG_PE_PE FOREIGN KEY (PROTECTION_ELEMENT_ID) 
    REFERENCES CSM_PROTECTION_ELEMENT (PROTECTION_ELEMENT_ID)
    ON DELETE CASCADE);

ALTER TABLE CSM_PG_PE ADD (
  CONSTRAINT FK_PG_PE_PG FOREIGN KEY (PROTECTION_GROUP_ID) 
    REFERENCES CSM_PROTECTION_GROUP (PROTECTION_GROUP_ID)
    ON DELETE CASCADE);


ALTER TABLE CSM_PROTECTION_ELEMENT ADD (
  CONSTRAINT FK_PE_APPLICATION FOREIGN KEY (APPLICATION_ID) 
    REFERENCES CSM_APPLICATION (APPLICATION_ID)
    ON DELETE CASCADE);


ALTER TABLE CSM_PROTECTION_GROUP ADD (
  CONSTRAINT FK_PG_APPLICATION FOREIGN KEY (APPLICATION_ID) 
    REFERENCES CSM_APPLICATION (APPLICATION_ID)
    ON DELETE CASCADE);

ALTER TABLE CSM_PROTECTION_GROUP ADD (
  CONSTRAINT FK_PG_PG FOREIGN KEY (PARENT_PROTECTION_GROUP_ID) 
    REFERENCES CSM_PROTECTION_GROUP (PROTECTION_GROUP_ID));


ALTER TABLE CSM_ROLE ADD (
  CONSTRAINT FK_ROLE_APPLICATION FOREIGN KEY (APPLICATION_ID) 
    REFERENCES CSM_APPLICATION (APPLICATION_ID)
    ON DELETE CASCADE);


ALTER TABLE CSM_ROLE_PRIVILEGE ADD (
  CONSTRAINT FK_ROLE_PRIVILEGE_PRIVILEGE FOREIGN KEY (PRIVILEGE_ID) 
    REFERENCES CSM_PRIVILEGE (PRIVILEGE_ID)
    ON DELETE CASCADE);

ALTER TABLE CSM_ROLE_PRIVILEGE ADD (
  CONSTRAINT FK_ROLE_PRIVILEGE_ROLE FOREIGN KEY (ROLE_ID) 
    REFERENCES CSM_ROLE (ROLE_ID)
    ON DELETE CASCADE);


ALTER TABLE CSM_USER_GROUP ADD (
  CONSTRAINT FK_USER_GROUP_GROUP FOREIGN KEY (GROUP_ID) 
    REFERENCES CSM_GROUP (GROUP_ID)
    ON DELETE CASCADE);

ALTER TABLE CSM_USER_GROUP ADD (
  CONSTRAINT FK_USER_GROUP_USER FOREIGN KEY (USER_ID) 
    REFERENCES CSM_USER (USER_ID)
    ON DELETE CASCADE);


ALTER TABLE CSM_USER_GROUP_ROLE_PG ADD (
  CONSTRAINT FK_USER_GROUP_ROLE_PG_GROUP FOREIGN KEY (GROUP_ID) 
    REFERENCES CSM_GROUP (GROUP_ID));

ALTER TABLE CSM_USER_GROUP_ROLE_PG ADD (
  CONSTRAINT FK_USER_GROUP_ROLE_PG_PG FOREIGN KEY (PROTECTION_GROUP_ID) 
    REFERENCES CSM_PROTECTION_GROUP (PROTECTION_GROUP_ID)
    ON DELETE CASCADE);

ALTER TABLE CSM_USER_GROUP_ROLE_PG ADD (
  CONSTRAINT FK_USER_GROUP_ROLE_PG_ROLE FOREIGN KEY (ROLE_ID) 
    REFERENCES CSM_ROLE (ROLE_ID)
    ON DELETE CASCADE);


ALTER TABLE CSM_USER_PE ADD (
  CONSTRAINT FK_USER_PE_PE FOREIGN KEY (PROTECTION_ELEMENT_ID) 
    REFERENCES CSM_PROTECTION_ELEMENT (PROTECTION_ELEMENT_ID)
    ON DELETE CASCADE);

ALTER TABLE CSM_USER_PE ADD (
  CONSTRAINT FK_USER_PE_USER FOREIGN KEY (USER_ID) 
    REFERENCES CSM_USER (USER_ID)
    ON DELETE CASCADE);


ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (AGENT_ID) 
    REFERENCES AGENT_DIM (AGENT_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (TREATMENT_HISTORY_ID) 
    REFERENCES TREATMENT_HISTORY_DIM (TREATMENT_HISTORY_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (DISEASE_HISTORY_ID) 
    REFERENCES DISEASE_HISTORY_DIM (DISEASE_HISTORY_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (AGE_GROUP) 
    REFERENCES AGE_GROUP_DX_DIM (AGE_GROUP));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (BIOSPECIMEN_ID) 
    REFERENCES BIOSPECIMEN_DIM (BIOSPECIMEN_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (TIMECOURSE_ID) 
    REFERENCES STUDY_TIMECOURSE_DIM (TIMECOURSE_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (EXP_PLATFORM_ID) 
    REFERENCES EXP_PLATFORM_DIM (EXP_PLATFORM_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (GENDER_CODE) 
    REFERENCES GENDER_DIM (GENDER_CODE));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (DATASET_ID) 
    REFERENCES STUDY_DATASET_DIM (DATASET_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (INSTITUTION_ID) 
    REFERENCES INSTITUTION_DIM (INSTITUTION_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (CLONE_ID) 
    REFERENCES CLONE_DIM (CLONE_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (DISEASE_TYPE_ID) 
    REFERENCES DISEASE_TYPE_DIM (DISEASE_TYPE_ID));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (SURVIV_LENGTH_RANGE) 
    REFERENCES SURVIVAL_LENGTH_RANGE_DIM (SURVIVAL_LENGTH_RANGE));

ALTER TABLE DIFFERENTIAL_EXPRESSION_SFACT ADD (
  FOREIGN KEY (PROBESET_ID) 
    REFERENCES PROBESET_DIM_NEW (PROBESET_ID));


ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (AGENT_ID) 
    REFERENCES AGENT_DIM (AGENT_ID));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (TREATMENT_HISTORY_ID) 
    REFERENCES TREATMENT_HISTORY_DIM (TREATMENT_HISTORY_ID));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (DISEASE_HISTORY_ID) 
    REFERENCES DISEASE_HISTORY_DIM (DISEASE_HISTORY_ID));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (AGE_GROUP) 
    REFERENCES AGE_GROUP_DX_DIM (AGE_GROUP));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (BIOSPECIMEN_ID) 
    REFERENCES BIOSPECIMEN_DIM (BIOSPECIMEN_ID));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (TIMECOURSE_ID) 
    REFERENCES STUDY_TIMECOURSE_DIM (TIMECOURSE_ID));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (EXP_PLATFORM_ID) 
    REFERENCES EXP_PLATFORM_DIM (EXP_PLATFORM_ID));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (GENDER_CODE) 
    REFERENCES GENDER_DIM (GENDER_CODE));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (DATASET_ID) 
    REFERENCES STUDY_DATASET_DIM (DATASET_ID));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (INSTITUTION_ID) 
    REFERENCES INSTITUTION_DIM (INSTITUTION_ID));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (DISEASE_TYPE_ID) 
    REFERENCES DISEASE_TYPE_DIM (DISEASE_TYPE_ID));

ALTER TABLE DIFF_EXPRESSION_GENE_SFACT ADD (
  FOREIGN KEY (SURVIV_LENGTH_RANGE) 
    REFERENCES SURVIVAL_LENGTH_RANGE_DIM (SURVIVAL_LENGTH_RANGE));


ALTER TABLE PATIENT ADD (
  FOREIGN KEY (POPULATION_TYPE_ID) 
    REFERENCES POPULATION_TYPE (POPULATION_TYPE_ID));


ALTER TABLE PROTEIN_FAMILY ADD (
  FOREIGN KEY (PROBESET_ID) 
    REFERENCES PROBESET_DIM_NEW (PROBESET_ID));


ALTER TABLE SWISSPROT ADD (
  FOREIGN KEY (PROBESET_ID) 
    REFERENCES PROBESET_DIM_NEW (PROBESET_ID));



