
// Generated by OJB SchemeGenerator

package gov.nih.nci.rembrandt.dbbean;

import gov.nih.nci.rembrandt.queryservice.resultset.ResultSet;

import java.sql.Date;



/**
* caIntegrator License
* 
* Copyright 2001-2005 Science Applications International Corporation ("SAIC"). 
* The software subject to this notice and license includes both human readable source code form and machine readable, 
* binary, object code form ("the caIntegrator Software"). The caIntegrator Software was developed in conjunction with 
* the National Cancer Institute ("NCI") by NCI employees and employees of SAIC. 
* To the extent government employees are authors, any rights in such works shall be subject to Title 17 of the United States
* Code, section 105. 
* This caIntegrator Software License (the "License") is between NCI and You. "You (or "Your") shall mean a person or an 
* entity, and all other entities that control, are controlled by, or are under common control with the entity. "Control" 
* for purposes of this definition means (i) the direct or indirect power to cause the direction or management of such entity,
*  whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) 
* beneficial ownership of such entity. 
* This License is granted provided that You agree to the conditions described below. NCI grants You a non-exclusive, 
* worldwide, perpetual, fully-paid-up, no-charge, irrevocable, transferable and royalty-free right and license in its rights 
* in the caIntegrator Software to (i) use, install, access, operate, execute, copy, modify, translate, market, publicly 
* display, publicly perform, and prepare derivative works of the caIntegrator Software; (ii) distribute and have distributed 
* to and by third parties the caIntegrator Software and any modifications and derivative works thereof; 
* and (iii) sublicense the foregoing rights set out in (i) and (ii) to third parties, including the right to license such 
* rights to further third parties. For sake of clarity, and not by way of limitation, NCI shall have no right of accounting
* or right of payment from You or Your sublicensees for the rights granted under this License. This License is granted at no
* charge to You. 
* 1. Your redistributions of the source code for the Software must retain the above copyright notice, this list of conditions
*    and the disclaimer and limitation of liability of Article 6, below. Your redistributions in object code form must reproduce 
*    the above copyright notice, this list of conditions and the disclaimer of Article 6 in the documentation and/or other materials
*    provided with the distribution, if any. 
* 2. Your end-user documentation included with the redistribution, if any, must include the following acknowledgment: "This 
*    product includes software developed by SAIC and the National Cancer Institute." If You do not include such end-user 
*    documentation, You shall include this acknowledgment in the Software itself, wherever such third-party acknowledgments 
*    normally appear.
* 3. You may not use the names "The National Cancer Institute", "NCI" "Science Applications International Corporation" and 
*    "SAIC" to endorse or promote products derived from this Software. This License does not authorize You to use any 
*    trademarks, service marks, trade names, logos or product names of either NCI or SAIC, except as required to comply with
*    the terms of this License. 
* 4. For sake of clarity, and not by way of limitation, You may incorporate this Software into Your proprietary programs and 
*    into any third party proprietary programs. However, if You incorporate the Software into third party proprietary 
*    programs, You agree that You are solely responsible for obtaining any permission from such third parties required to 
*    incorporate the Software into such third party proprietary programs and for informing Your sublicensees, including 
*    without limitation Your end-users, of their obligation to secure any required permissions from such third parties 
*    before incorporating the Software into such third party proprietary software programs. In the event that You fail 
*    to obtain such permissions, You agree to indemnify NCI for any claims against NCI by such third parties, except to 
*    the extent prohibited by law, resulting from Your failure to obtain such permissions. 
* 5. For sake of clarity, and not by way of limitation, You may add Your own copyright statement to Your modifications and 
*    to the derivative works, and You may provide additional or different license terms and conditions in Your sublicenses 
*    of modifications of the Software, or any derivative works of the Software as a whole, provided Your use, reproduction, 
*    and distribution of the Work otherwise complies with the conditions stated in this License.
* 6. THIS SOFTWARE IS PROVIDED "AS IS," AND ANY EXPRESSED OR IMPLIED WARRANTIES, (INCLUDING, BUT NOT LIMITED TO, 
*    THE IMPLIED WARRANTIES OF MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED. 
*    IN NO EVENT SHALL THE NATIONAL CANCER INSTITUTE, SAIC, OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, 
*    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
*    GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
*    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
*    OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
* 
*/

public class NeuroEvaluation implements ResultSet
{
   public final static String NEURO_EVALUATION_ID = "neuroEvaluationId";
   public final static String PATIENT_DID = "patientDid";  
   public final static String INSTITUTION_ID = "institutionId";
   public final static String DATASET_ID = "datasetId";
   public final static String TIME_POINT = "timePoint";
   public final static String FOLLOWUP_DATE = "followupDate";
   public final static String FOLLOWUP_MONTH = "followupMonth";
   public final static String NEURO_EVALUATION_DATE = "neuroEvaluationDate";
   public final static String KARNOFSKY_SCORE = "KARNOFSKY_SCORE";
   public final static String LANSKY_SCORE = "LANSKY_SCORE";
   public final static String NEURO_EXAM= "NEURO_EXAM";
   public final static String MRI_CT_SCORE= "MRI_CT_SCORE";
   public final static String STEROID_DOSE_STATUS= "steroidDoseStatus"; 
   public final static String ANTI_CONVULSANT_STATUS= "antiConvulsantStatus";
   public final static String NEURO_EXAM_DESC= "neuroExamDesc";
   public final static String MRI_CT_SCORE_DESC= "mriScoreDesc";
  

    private Long neuroEvaluationId;
    
    private Long patientDid;

    private Long institutionId;
    
    private Long datasetId;

    private String timePoint;  

    private Date followupDate;   

    private Long followupMonth;

    private Date neuroEvaluationDate;     
    
    private Long karnofskyScore;
    
    private Long lanskyScore;
    
    private Long neuroExam;  
    
    private Long mriCtScore;
    
    private String steroidDoseStatus;
    
    private String antiConvulsantStatus;
    
    private String neuroExamDesc;
    
    private String mriScoreDesc;  
    
   
    

	/**
	 * @return Returns the mriScoreDesc.
	 */
	public String getMriScoreDesc() {
		return mriScoreDesc;
	}

	/**
	 * @param mriScoreDesc The mriScoreDesc to set.
	 */
	public void setMriScoreDesc(String mriScoreDesc) {
		this.mriScoreDesc = mriScoreDesc;
	}

	/**
	 * @return Returns the neuroExamDesc.
	 */
	public String getNeuroExamDesc() {
		return neuroExamDesc;
	}

	/**
	 * @param neuroExamDesc The neuroExamDesc to set.
	 */
	public void setNeuroExamDesc(String neuroExamDesc) {
		this.neuroExamDesc = neuroExamDesc;
	}

	/**
	 * @return Returns the antiConvulsantStatus.
	 */
	public String getAntiConvulsantStatus() {
		return antiConvulsantStatus;
	}

	/**
	 * @param antiConvulsantStatus The antiConvulsantStatus to set.
	 */
	public void setAntiConvulsantStatus(String antiConvulsantStatus) {
		this.antiConvulsantStatus = antiConvulsantStatus;
	}

	/**
	 * @return Returns the neuroEvaluationId.
	 */
	public Long getNeuroEvaluationId() {
		return neuroEvaluationId;
	}

	/**
	 * @param clinicalEvaluationId The neuroEvaluationId to set.
	 */
	public void setNeuroEvaluationId(Long neuroEvaluationId) {
		this.neuroEvaluationId = neuroEvaluationId;
	}

	/**
	 * @return Returns the datasetId.
	 */
	public Long getDatasetId() {
		return datasetId;
	}

	/**
	 * @param datasetId The datasetId to set.
	 */
	public void setDatasetId(Long datasetId) {
		this.datasetId = datasetId;
	}

	/**
	 * @return Returns the followupDate.
	 */
	public Date getFollowupDate() {
		return followupDate;
	}

	/**
	 * @param followupDate The followupDate to set.
	 */
	public void setFollowupDate(Date followupDate) {
		this.followupDate = followupDate;
	}

	/**
	 * @return Returns the followupMonth.
	 */
	public Long getFollowupMonth() {
		return followupMonth;
	}

	/**
	 * @param followupMonth The followupMonth to set.
	 */
	public void setFollowupMonth(Long followupMonth) {
		this.followupMonth = followupMonth;
	}

	/**
	 * @return Returns the institutionId.
	 */
	public Long getInstitutionId() {
		return institutionId;
	}

	/**
	 * @param institutionId The institutionId to set.
	 */
	public void setInstitutionId(Long institutionId) {
		this.institutionId = institutionId;
	}

	/**
	 * @return Returns the karnofskyScore.
	 */
	public Long getKarnofskyScore() {
		return karnofskyScore;
	}

	/**
	 * @param karnofskyScore The karnofskyScore to set.
	 */
	public void setKarnofskyScore(Long karnofskyScore) {
		this.karnofskyScore = karnofskyScore;
	}

	/**
	 * @return Returns the lanskyScore.
	 */
	public Long getLanskyScore() {
		return lanskyScore;
	}

	/**
	 * @param lanskyScore The lanskyScore to set.
	 */
	public void setLanskyScore(Long lanskyScore) {
		this.lanskyScore = lanskyScore;
	}

	/**
	 * @return Returns the mriCtScore.
	 */
	public Long getMriCtScore() {
		return mriCtScore;
	}

	/**
	 * @param mriCtScore The mriCtScore to set.
	 */
	public void setMriCtScore(Long mriCtScore) {
		this.mriCtScore = mriCtScore;
	}

	/**
	 * @return Returns the neuroEvaluationDate.
	 */
	public Date getNeuroEvaluationDate() {
		return neuroEvaluationDate;
	}

	/**
	 * @param neuroEvaluationDate The neuroEvaluationDate to set.
	 */
	public void setNeuroEvaluationDate(Date neuroEvaluationDate) {
		this.neuroEvaluationDate = neuroEvaluationDate;
	}

	/**
	 * @return Returns the neuroExam.
	 */
	public Long getNeuroExam() {
		return neuroExam;
	}

	/**
	 * @param neuroExam The neuroExam to set.
	 */
	public void setNeuroExam(Long neuroExam) {
		this.neuroExam = neuroExam;
	}

	/**
	 * @return Returns the patientDid.
	 */
	public Long getPatientDid() {
		return patientDid;
	}

	/**
	 * @param patientDid The patientDid to set.
	 */
	public void setPatientDid(Long patientDid) {
		this.patientDid = patientDid;
	}

	/**
	 * @return Returns the steroidDoseStatus.
	 */
	public String getSteroidDoseStatus() {
		return steroidDoseStatus;
	}

	/**
	 * @param steroidDoseStatus The steroidDoseStatus to set.
	 */
	public void setSteroidDoseStatus(String steroidDoseStatus) {
		this.steroidDoseStatus = steroidDoseStatus;
	}

	/**
	 * @return Returns the timePoint.
	 */
	public String getTimePoint() {
		return timePoint;
	}

	/**
	 * @param timePoint The timePoint to set.
	 */
	public void setTimePoint(String timePoint) {
		this.timePoint = timePoint;
	}
      
    
    
}

	

	

	
	
	
    
    
    
  

   


  
  
  


  




