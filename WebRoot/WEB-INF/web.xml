<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
		http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
	id="WebApp_ID" version="2.5">

  <display-name>rembrandt</display-name>
  
  <listener>
		<listener-class>
			org.apache.struts2.tiles.StrutsTilesListener
		</listener-class>
	</listener>
	<context-param>
		<param-name>tilesDefinitions</param-name>
		<param-value>/WEB-INF/tiles.xml</param-value>
	</context-param>
  
   <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/applicationContext.xml,
			/WEB-INF/applicationContext-*.xml,
			classpath*:/applicationContext-services.xml
		</param-value>
	</context-param>
	
	<filter>
		<filter-name>httpResponseSplittingPreventionFilter</filter-name>
		<filter-class>
			gov.nih.nci.rembrandt.util.HttpResponseSplittingPreventionFilter
		</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>httpResponseSplittingPreventionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--Register SessionListener
		This is used by the caintegrator.application.cache package to 
		watch for dead sessions and remove the caches.  For more
		more information check the java files for comments. 
	-->
	<listener>
		<listener-class>
			gov.nih.nci.caintegrator.application.cache.SessionTracker
		</listener-class>
	</listener>

	<listener>
		<listener-class>
			gov.nih.nci.caintegrator.application.configuration.ConfigurationListener
		</listener-class>
	</listener>
	<!-- Register ContextListener
		notifies the SessionListener whenever the context is loaded or
		unloaded in the ApplicationServer
	-->
	<listener>
		<listener-class>
			gov.nih.nci.rembrandt.cache.RembrandtContextListener
		</listener-class>
	</listener>
    
    <!-- Action Servlet Configuration -->
	<filter>
		<filter-name>struts2</filter-name>

		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>
		<!--  probably not needed - convention over configuration in struts 2
		<init-param>
			<param-name>config</param-name>
			<param-value>
				/WEB-INF/struts-config.xml,
				/WEB-INF/struts-config-registration.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		-->
	</filter>	
	
	<servlet>
		<servlet-name>QuartzInitializer</servlet-name>
     		<!--  display-name>Quartz Initializer Servlet</display-name> -->

  		<servlet-class>org.quartz.ee.servlet.QuartzInitializerServlet
  		</servlet-class>
  		<init-param>
    			<param-name>shutdown-on-unload</param-name>
    			<param-value>true</param-value>
  		</init-param>

  		<init-param>
    			<param-name>start-scheduler-on-load</param-name>
    			<param-value>false</param-value>
    		</init-param>
    	<load-on-startup>1</load-on-startup>
 	</servlet>
 	
 	<servlet>
    	<servlet-name>DisplayChart</servlet-name>
    	<servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class>
  	</servlet>
  	<servlet>
	  <servlet-name>dwr-invoker</servlet-name>
	  <!--  display-name>DWR Servlet</display-name> -->
	  <servlet-class>uk.ltd.getahead.dwr.DWRServlet</servlet-class>
	  <init-param>
	     <param-name>debug</param-name>
	     <param-value>true</param-value>
	  </init-param>
	</servlet>
	<servlet>
    	<servlet-name>GOTreeServlet</servlet-name>
    	<servlet-class>gov.nih.nci.rembrandt.web.servlets.GOTreeServlet</servlet-class>
  	</servlet>
  	<servlet>
		<servlet-name>Captcha</servlet-name>
		<!--  display-name>Captcha</display-name> -->
		<servlet-class>nl.captcha.servlet.CaptchaServlet</servlet-class>
	</servlet>
	
	 <servlet-mapping>
        <servlet-name>DisplayChart</servlet-name>
        <url-pattern>/servlet/DisplayChart</url-pattern>
    </servlet-mapping>
	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
  		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>GOTreeServlet</servlet-name>
  		<url-pattern>/GOTreeServlet/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Captcha</servlet-name>
		<url-pattern>/Captcha.jpg</url-pattern>
	</servlet-mapping>
 	
 	<filter-mapping>
    	<filter-name>struts2</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>
 	
   
	<!-- Action Servlet Mapping -->
    
    <!-- Added to avoid session timeout problems 3 hour session timeout -->
	<session-config>
		<session-timeout>180</session-timeout>
	</session-config>
  
  <welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
</web-app>